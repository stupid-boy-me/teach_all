import PIL.Image as Image
import os

IMAGES_PATH = r'D:\nextvpu\yanye\code\1_analyse_wenlidu\masaike_picture\\'  # 图片集地址
IMAGES_FORMAT = ['.bmp']  # 图片格式
IMAGE_SIZE = 512  # 每张小图片的大小 1/4的大小
IMAGE_ROW = 2  # 图片间隔，也就是合并成一张图后，一共有几行
IMAGE_COLUMN = 2  # 图片间隔，也就是合并成一张图后，一共有几列
IMAGE_SAVE_PATH = r'D:\nextvpu\yanye\code\1_analyse_wenlidu\masaike_picture\\'  # 图片转换后的地址

# 获取图片集地址下的所有图片名称
image_names = [name for name in os.listdir(IMAGES_PATH) for item in IMAGES_FORMAT if
               os.path.splitext(name)[1] == item]

# 定义图像拼接函数
def image_compose(i=None):

    to_image = Image.new('RGB', (IMAGE_COLUMN * IMAGE_SIZE, IMAGE_ROW * IMAGE_SIZE))  # 创建一个新图
    # 循环遍历，把每张图片按顺序粘贴到对应位置上
    for y in range(1, IMAGE_COLUMN + 1):
        for x in range(1, IMAGE_COLUMN + 1):
            from_image = Image.open(IMAGES_PATH + image_names[i + 2*(y - 1) + (x - 1)]).resize(
                (IMAGE_SIZE, IMAGE_SIZE), Image.ANTIALIAS)
            to_image.paste(from_image, ((x - 1) * IMAGE_SIZE, (y - 1) * IMAGE_SIZE))
    return to_image


if __name__ == '__main__':
    for i in range(0, len(image_names), 4):
        img = image_compose(i=i)  # 调用函数
        name = IMAGE_SAVE_PATH + str(i+130) + ".jpg"
        img.save(name)
        print(img.size)
